import{_ as e,o as t,c as n,a as o}from"./app.4b9bd121.js";const f=JSON.parse('{"title":"Content API. Filtering and selecting content","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"Search and selection of content","slug":"search-and-selection-of-content","link":"#search-and-selection-of-content","children":[]},{"level":2,"title":"Filtering and sorting of content in the catalog","slug":"filtering-and-sorting-of-content-in-the-catalog","link":"#filtering-and-sorting-of-content-in-the-catalog","children":[]}],"relativePath":"backend/api/content-api/content-filtering-and-selecting.md"}'),i={name:"backend/api/content-api/content-filtering-and-selecting.md"},a=o('<h1 id="content-api-filtering-and-selecting-content" tabindex="-1">Content API. Filtering and selecting content <a class="header-anchor" href="#content-api-filtering-and-selecting-content" aria-hidden="true">#</a></h1><h2 id="search-and-selection-of-content" tabindex="-1">Search and selection of content <a class="header-anchor" href="#search-and-selection-of-content" aria-hidden="true">#</a></h2><p>Text input fields provide semantic selection of content by name, description, genres, actors and release date.</p><p>Possible semantic search queries <br><code>by name</code>: &quot;Green Mile&quot;, &quot;watch Pulp Fiction&quot; <br><code>according to the description</code>: &quot;films about naval battles&quot;, &quot;TV series about schoolchildren and magic&quot; <br><code>by genre</code>: &quot;comedies&quot;, &quot;watch arthouse&quot; <br><code>by actors</code>: &quot;Jared Leto&quot;, &quot;films with Johnny Depp&quot; <br><code>by release date</code>: &quot;2010&quot;, &quot;films of 2022&quot; <br></p><h2 id="filtering-and-sorting-of-content-in-the-catalog" tabindex="-1">Filtering and sorting of content in the <code>catalog</code> <a class="header-anchor" href="#filtering-and-sorting-of-content-in-the-catalog" aria-hidden="true">#</a></h2><p>As a user, I can filter and sort the displayed list of content.</p><p>Sorting takes place according to the following parameters:</p><ul><li>by name</li><li>by popularity</li><li>by rating</li><li>by views</li><li>according to the latest updates (when adding content or updating a series/media file in it)</li><li>in random order</li></ul><p>Sorting can occur from more to less or vice versa.</p><p>Filtering occurs by one or more parameters at the same time:</p><ul><li>by type [movies | TV series | traditional animation | anime] <span style="color:red;">(in the future)</span></li><li>by genre</li><li>by country</li><li>by age rating [0+ | 16+ | 18+]</li><li>project status [announcement | coming out | completed] <span style="color:red;">(in the future)</span></li><li>by period or year of issue</li></ul><p>According to similar parameters, it is possible to <strong>exclude</strong> certain content from the output.</p><p>Sorting can be applied to filtering, and the parameters can be expanded in the future.</p>',13),r=[a];function c(l,s,d,p,u,g){return t(),n("div",null,r)}const m=e(i,[["render",c]]);export{f as __pageData,m as default};
